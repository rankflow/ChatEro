import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function testPrismaConnection() {
  console.log('üß™ Probando conexi√≥n de Prisma...\n');

  try {
    // 1. Probar conexi√≥n b√°sica
    console.log('1Ô∏è‚É£ Probando conexi√≥n b√°sica...');
    await prisma.$connect();
    console.log('‚úÖ Conexi√≥n exitosa');

    // 2. Verificar si las tablas de memoria existen
    console.log('\n2Ô∏è‚É£ Verificando tablas de memoria...');
    
    try {
      // Intentar acceder a las tablas de memoria
      const userMemories = await prisma.userMemory.findMany({ take: 1 });
      console.log('‚úÖ Tabla userMemory existe');
    } catch (error) {
      console.log('‚ùå Tabla userMemory no existe:', error.message);
    }

    try {
      const conversationEmbeddings = await prisma.conversationEmbedding.findMany({ take: 1 });
      console.log('‚úÖ Tabla conversationEmbedding existe');
    } catch (error) {
      console.log('‚ùå Tabla conversationEmbedding no existe:', error.message);
    }

    try {
      const memoryClusters = await prisma.memoryCluster.findMany({ take: 1 });
      console.log('‚úÖ Tabla memoryCluster existe');
    } catch (error) {
      console.log('‚ùå Tabla memoryCluster no existe:', error.message);
    }

    try {
      const sessionSummaries = await prisma.sessionSummary.findMany({ take: 1 });
      console.log('‚úÖ Tabla sessionSummary existe');
    } catch (error) {
      console.log('‚ùå Tabla sessionSummary no existe:', error.message);
    }

    // 3. Verificar tablas existentes
    console.log('\n3Ô∏è‚É£ Verificando tablas existentes...');
    try {
      const users = await prisma.user.findMany({ take: 1 });
      console.log('‚úÖ Tabla user existe');
    } catch (error) {
      console.log('‚ùå Tabla user no existe:', error.message);
    }

    try {
      const avatars = await prisma.avatar.findMany({ take: 1 });
      console.log('‚úÖ Tabla avatar existe');
    } catch (error) {
      console.log('‚ùå Tabla avatar no existe:', error.message);
    }

    try {
      const messages = await prisma.message.findMany({ take: 1 });
      console.log('‚úÖ Tabla message existe');
    } catch (error) {
      console.log('‚ùå Tabla message no existe:', error.message);
    }

    console.log('\nüéâ Verificaci√≥n de Prisma completada');

  } catch (error) {
    console.error('\n‚ùå Error en la conexi√≥n de Prisma:', error);
  } finally {
    await prisma.$disconnect();
  }
}

// Ejecutar la prueba
testPrismaConnection().catch(console.error); 